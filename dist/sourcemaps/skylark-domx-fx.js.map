{"version":3,"sources":["skylark-domx-fx.js"],"names":["define","skylark","langx","fx","mixin","off","speeds","normal","fast","slow","attach","browser","noder","geom","styler","eventer","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","normalizeCssEvent","transitionEnd","supportedTransforms","transform","css3PropPrefix","cssReset","normalizeCssProperty","animate","elm","properties","duration","ease","callback","delay","key","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","this","fired","hasScrollTop","isPlainObject","easing","complete","isString","undefined","isFunction","eace","v","test","top","right","bottom","left","css","size","width","height","push","dasherize","join","event","target","currentTarget","call","on","debounce","clientLeft","scrollToTop","transits","bounce","emulateTransitionEnd","explode","fadeIn","fadeOut","fade","fadeToggle","hide","pulsate","shake","show","slide","options","direction","isHide","isVert","position","isInvisible","visibility","marginTop","marginBottom","paddingTop","paddingBottom","overflow","queue","apply","marginLeft","marginRight","paddingLeft","paddingRight","slideDown","slideToggle","slideUp","throb","params","text","style","timer","time","throbber","createElement","class","className","remove","clearTimeout","content","html","appendChild","setTimeout","update","textNode","nodeValue","toggle","speed","main"],"mappings":"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","file":"../skylark-domx-fx.js","sourcesContent":["define('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        }\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/animate',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"./fx\"\r\n], function(langx, browser, noder, geom, styler, eventer,fx) {\r\n\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    return fx.animate = animate;\r\n\r\n});\ndefine('skylark-domx-fx/bounce',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n    return fx.bounce = transits.bounce;\r\n});\ndefine('skylark-domx-fx/emulateTransitionEnd',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n    return fx.emulateTransitionEnd = transits.emulateTransitionEnd;\r\n});\ndefine('skylark-domx-fx/explode',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\treturn fx.explode = transits.explode;\r\n});\r\n\ndefine('skylark-domx-fx/fadeIn',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    return fx.fadeIn = transits.fadeIn;\r\n});\ndefine('skylark-domx-fx/fadeOut',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    return fx.fadeOut = transits.fadeOut;\r\n});\ndefine('skylark-domx-fx/fade',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    return fx.fade = transits.fade;\r\n});\ndefine('skylark-domx-fx/fadeToggle',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    return fx.fadeToggle = transits.fadeToggle;\r\n});\ndefine('skylark-domx-fx/hide',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    return fx.hide = transits.hide;\r\n});\ndefine('skylark-domx-fx/pulsate',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n\treturn fx.pulsate = transits.pulsate;\r\n\r\n});\r\n\ndefine('skylark-domx-fx/shake',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n\treturn fx.shake = transits.shake;\r\n\r\n});\r\n\ndefine('skylark-domx-fx/show',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    return fx.show = transits.show;\r\n});\ndefine('skylark-domx-fx/slide',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    function slide(elm,options,callback ) {\r\n    \tif (langx.isFunction(options)) {\r\n    \t\tcallback = options;\r\n    \t\toptions = {};\r\n    \t}\r\n    \toptions = options || {};\r\n\t\tvar direction = options.direction || \"down\",\r\n\t\t\tisHide = ( direction === \"up\" || direction === \"left\" ),\r\n\t\t\tisVert = ( direction === \"up\" || direction === \"down\" ),\r\n\t\t\tduration = options.duration || fx.speeds.normal;\r\n\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        if (isHide) {\r\n            // active the function only if the element is visible\r\n        \tif (styler.isInvisible(elm)) {\r\n        \t\treturn this;\r\n        \t}\r\n        } else {\r\n\t        // show element if it is hidden\r\n\t        styler.show(elm);        \t\r\n\t        // place it so it displays as usually but hidden\r\n\t        styler.css(elm, {\r\n\t            position: 'absolute',\r\n\t            visibility: 'hidden'\r\n\t        });\r\n        }\r\n\r\n\r\n\r\n        if (isVert) { // up--down\r\n\t        // get naturally height, margin, padding\r\n\t        var marginTop = styler.css(elm, 'margin-top');\r\n\t        var marginBottom = styler.css(elm, 'margin-bottom');\r\n\t        var paddingTop = styler.css(elm, 'padding-top');\r\n\t        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\t        var height = styler.css(elm, 'height');\r\n\r\n\t        if (isHide) {  \t// slideup\r\n\t            // set initial css for animation\r\n\t            styler.css(elm, {\r\n\t                visibility: 'visible',\r\n\t                overflow: 'hidden',\r\n\t                height: height,\r\n\t                marginTop: marginTop,\r\n\t                marginBottom: marginBottom,\r\n\t                paddingTop: paddingTop,\r\n\t                paddingBottom: paddingBottom\r\n\t            });\r\n\r\n\t            // animate element height, margin and padding to zero\r\n\t            animate(elm, {\r\n\t                height: 0,\r\n\t                marginTop: 0,\r\n\t                marginBottom: 0,\r\n\t                paddingTop: 0,\r\n\t                paddingBottom: 0\r\n\t            }, {\r\n\t                // callback : restore the element position, height, margin and padding to original values\r\n\t                duration: duration,\r\n\t                queue: false,\r\n\t                complete: function() {\r\n\t                    styler.hide(elm);\r\n\t                    styler.css(elm, {\r\n\t                        visibility: 'visible',\r\n\t                        overflow: 'hidden',\r\n\t                        height: height,\r\n\t                        marginTop: marginTop,\r\n\t                        marginBottom: marginBottom,\r\n\t                        paddingTop: paddingTop,\r\n\t                        paddingBottom: paddingBottom\r\n\t                    });\r\n\t                    if (callback) {\r\n\t                        callback.apply(elm);\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t        } else {     \t// slidedown\r\n\t\t        // set initial css for animation\r\n\t\t        styler.css(elm, {\r\n\t\t            position: position,\r\n\t\t            visibility: 'visible',\r\n\t\t            overflow: 'hidden',\r\n\t\t            height: 0,\r\n\t\t            marginTop: 0,\r\n\t\t            marginBottom: 0,\r\n\t\t            paddingTop: 0,\r\n\t\t            paddingBottom: 0\r\n\t\t        });\r\n\r\n\t\t        // animate to gotten height, margin and padding\r\n\t\t        animate(elm, {\r\n\t\t            height: height,\r\n\t\t            marginTop: marginTop,\r\n\t\t            marginBottom: marginBottom,\r\n\t\t            paddingTop: paddingTop,\r\n\t\t            paddingBottom: paddingBottom\r\n\t\t        }, {\r\n\t\t            duration: duration,\r\n\t\t            complete: function() {\r\n\t\t                if (callback) {\r\n\t\t                    callback.apply(elm);\r\n\t\t                }\r\n\t\t            }\r\n\t\t        });\r\n\r\n\t        }\r\n\r\n        } else { // left--right\r\n\t        // get naturally height, margin, padding\r\n\t        var marginLeft = styler.css(elm, 'margin-left');\r\n\t        var marginRight = styler.css(elm, 'margin-right');\r\n\t        var paddingLeft = styler.css(elm, 'padding-left');\r\n\t        var paddingRight = styler.css(elm, 'padding-right');\r\n\t        var width = styler.css(elm, 'width');\r\n\r\n\t        if (isHide) {  \t// slideleft\r\n\t            // set initial css for animation\r\n\t            styler.css(elm, {\r\n\t                visibility: 'visible',\r\n\t                overflow: 'hidden',\r\n\t                width: width,\r\n\t                marginLeft: marginLeft,\r\n\t                marginRight: marginRight,\r\n\t                paddingLeft: paddingLeft,\r\n\t                paddingRight: paddingRight\r\n\t            });\r\n\r\n\t            // animate element height, margin and padding to zero\r\n\t            animate(elm, {\r\n\t                width: 0,\r\n\t                marginLeft: 0,\r\n\t                marginRight: 0,\r\n\t                paddingLeft: 0,\r\n\t                paddingRight: 0\r\n\t            }, {\r\n\t                // callback : restore the element position, height, margin and padding to original values\r\n\t                duration: duration,\r\n\t                queue: false,\r\n\t                complete: function() {\r\n\t                    styler.hide(elm);\r\n\t                    styler.css(elm, {\r\n\t                        visibility: 'visible',\r\n\t                        overflow: 'hidden',\r\n\t                        width: width,\r\n\t                        marginLeft: marginLeft,\r\n\t                        marginRight: marginRight,\r\n\t                        paddingLeft: paddingLeft,\r\n\t                        paddingRight: paddingRight\r\n\t                    });\r\n\t                    if (callback) {\r\n\t                        callback.apply(elm);\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t        } else {     \t// slideright\r\n\t\t        // set initial css for animation\r\n\t\t        styler.css(elm, {\r\n\t\t            position: position,\r\n\t\t            visibility: 'visible',\r\n\t\t            overflow: 'hidden',\r\n\t\t            width: 0,\r\n\t\t            marginLeft: 0,\r\n\t\t            marginRight: 0,\r\n\t\t            paddingLeft: 0,\r\n\t\t            paddingRight: 0\r\n\t\t        });\r\n\r\n\t\t        // animate to gotten width, margin and padding\r\n\t\t        animate(elm, {\r\n\t\t            width: width,\r\n\t\t            marginLeft: marginLeft,\r\n\t\t            marginRight: marginRight,\r\n\t\t            paddingLeft: paddingLeft,\r\n\t\t            paddingRight: paddingRight\r\n\t\t        }, {\r\n\t\t            duration: duration,\r\n\t\t            complete: function() {\r\n\t\t                if (callback) {\r\n\t\t                    callback.apply(elm);\r\n\t\t                }\r\n\t\t            }\r\n\t\t        });\r\n\r\n\t        }       \t\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    return fx.slide = slide;\r\n\r\n});\r\n\ndefine('skylark-domx-fx/slideDown',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n        return slide(elm,{\r\n            direction : \"down\",\r\n            duration : duration\r\n        },callback);\r\n    }\r\n\r\n    return fx.slideDown = slideDown;\r\n});\ndefine('skylark-domx-fx/slideToggle',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    return fx.slideToggle = slideToggle;\r\n});\ndefine('skylark-domx-fx/slideUp',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        return slide(elm,{\r\n            direction : \"up\",\r\n            duration : duration\r\n        },callback);\r\n    }\r\n\r\n\r\n\r\n    return fx.slideUp = slideUp;\r\n});\ndefine('skylark-domx-fx/throb',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            //_overlay = overlay(throbber, {\r\n            //    \"class\": 'overlay fade'\r\n            //}),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n\r\n        //throb = noder.createElement(\"div\", {\r\n        //   \"class\": params.throb && params.throb.className || \"throb\"\r\n        //}),\r\n        //textNode = noder.createTextNode(text || \"\"),\r\n \r\n        var content = params.content ||  '<span class=\"throb\"></span>';\r\n\r\n        //throb.appendChild(textNode);\r\n        //throbber.appendChild(throb);\r\n\r\n        noder.html(throbber,content);\r\n        \r\n        elm.appendChild(throbber);\r\n\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            throbber : throbber,\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    return fx.throb = throb;\r\n});\ndefine('skylark-domx-fx/toggle',[\r\n    \"skylark-domx-transits\",\r\n    \"./fx\"\r\n],function(transits,fx) {\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callbacke\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    return fx.toggle = toggle;\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\",\r\n    \"./animate\",\r\n    \"./bounce\",\r\n    \"./emulateTransitionEnd\",\r\n    \"./explode\",\r\n    \"./fadeIn\",\r\n    \"./fadeOut\",\r\n    \"./fade\",\r\n    \"./fadeToggle\",\r\n    \"./hide\",\r\n    \"./pulsate\",\r\n    \"./shake\",\r\n    \"./show\",\r\n    \"./slide\",\r\n    \"./slideDown\",\r\n    \"./slideToggle\",\r\n    \"./slideUp\",\r\n    \"./throb\",\r\n    \"./toggle\"\r\n],function(fx){\r\n\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\n"]}